{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/app.tsx","webpack:///./src/app/walletConnectUI.tsx","webpack:///./src/main.tsx","webpack:///./src/services/WalletConnectRemixClient.ts","webpack:///./src/services/constant.ts","webpack:///./src/css/app.css?d254","webpack:///ignored|/home/circleci/remix-project/node_modules/@stablelib/random/lib/source|crypto"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../css/app.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport type { EthereumClient } from '@web3modal/ethereum'\nimport { WalletConnectRemixClient } from '../services/WalletConnectRemixClient'\nimport { WalletConnectUI } from './walletConnectUI'\n\nconst remix = new WalletConnectRemixClient()\n\nfunction App() {\n  const [ethereumClient, setEthereumClient] = useState<EthereumClient>(null)\n  const [wagmiConfig, setWagmiConfig] = useState(null)\n  const [theme, setTheme] = useState<string>('dark')\n\n  useEffect(() => {\n    (async () => {\n      await remix.initClient()\n      remix.internalEvents.on('themeChanged', (theme: string) => {\n        setTheme(theme)\n      })\n      \n      setWagmiConfig(remix.wagmiConfig)\n      setEthereumClient(remix.ethereumClient)\n    })()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h4 className='mt-1'>WalletConnect</h4>\n      { ethereumClient && wagmiConfig && <WalletConnectUI wagmiConfig={wagmiConfig} ethereumClient={ethereumClient} theme={theme} /> }\n    </div>\n  )\n}\n\nexport default App","import { Web3Button, Web3Modal } from \"@web3modal/react\"\nimport { WagmiConfig } from \"wagmi\"\nimport { PROJECT_ID } from \"../services/constant\"\n\nexport function WalletConnectUI ({ ethereumClient, wagmiConfig, theme }) {\n\n    return (\n        <div>\n            <div style={{ display: 'inline-block' }}>\n                <WagmiConfig config={wagmiConfig}>\n                    <Web3Button label='Connect to a wallet' />\n                </WagmiConfig>\n            </div>\n            <Web3Modal projectId={PROJECT_ID} ethereumClient={ethereumClient} themeMode={theme} />\n        </div>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/app'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)","import { PluginClient } from '@remixproject/plugin'\nimport { createClient } from '@remixproject/plugin-webview'\nimport { w3mConnectors, w3mProvider } from '@web3modal/ethereum'\nimport { createConfig, configureChains } from 'wagmi'\nimport { arbitrum, arbitrumGoerli, mainnet, polygon, polygonMumbai, optimism, optimismGoerli, Chain, goerli, sepolia } from 'viem/chains'\nimport { EthereumClient } from '@web3modal/ethereum'\nimport EventManager from \"events\"\nimport { PROJECT_ID } from './constant'\n\nexport class WalletConnectRemixClient extends PluginClient {\n    wagmiConfig\n    ethereumClient: EthereumClient\n    chains: Chain[]\n    currentChain: number\n    internalEvents: EventManager\n\n    constructor() {\n        super()\n        createClient(this)\n        this.internalEvents = new EventManager()\n        this.methods = [\"sendAsync\", \"init\", \"deactivate\"]\n        this.onload()\n    }\n\n    onActivation () {\n        this.subscribeToEvents()\n        this.call('theme', 'currentTheme').then((theme: any) => {\n            this.internalEvents.emit('themeChanged', theme.quality.toLowerCase())\n        })\n    }\n\n    init () {\n        console.log('initializing walletconnect plugin...')\n    }\n\n    async initClient () {\n        try {\n            this.chains = [arbitrum, arbitrumGoerli, mainnet, polygon, polygonMumbai, optimism, optimismGoerli, goerli, sepolia]\n            const { publicClient } = configureChains(this.chains, [w3mProvider({ projectId: PROJECT_ID })])\n\n            this.wagmiConfig = createConfig({\n                autoConnect: false,\n                connectors: w3mConnectors({ projectId: PROJECT_ID, chains: this.chains }),\n                publicClient\n            })\n            this.ethereumClient = new EthereumClient(this.wagmiConfig, this.chains)\n        } catch (e) {\n            return console.error(\"Could not get a wallet connection\", e)\n        }\n    }\n\n    subscribeToEvents () {\n        this.wagmiConfig.subscribe((event) => {\n            if (event.status === 'connected') {\n                this.emit('accountsChanged', [event.data.account])\n                if (this.currentChain !== event.data.chain.id) {\n                    this.currentChain = event.data.chain.id\n                    this.emit('chainChanged', event.data.chain.id)\n                }\n            } else if (event.status === 'disconnected') {\n                this.emit('accountsChanged', [])\n                this.emit('chainChanged', 0)\n                this.currentChain = 0\n            }\n        })\n        this.on('theme', 'themeChanged', (theme: any) => {\n            this.internalEvents.emit('themeChanged', theme.quality)\n        })\n    }\n\n    sendAsync (data: { method: string, params: string, id: string }) {\n        return new Promise((resolve, reject) => {\n            if (this.wagmiConfig) {\n                this.wagmiConfig.publicClient.request(data).then((message) => {\n                    resolve({\"jsonrpc\": \"2.0\", \"result\": message, \"id\": data.id})\n                }).catch((error) => {\n                    reject(error)\n                })\n            } else {\n                console.error(`Cannot make ${data.method} request. Remix client is not connect to walletconnect client`)\n                resolve({\"jsonrpc\": \"2.0\", \"result\": [], \"id\": data.id})\n            }\n        })\n    }\n\n    async deactivate(){\n        console.log('deactivating walletconnect plugin...')\n        await this.ethereumClient.disconnect()\n    }\n}","// @ts-ignore\nexport const PROJECT_ID = WALLET_CONNECT_PROJECT_ID","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */"],"names":["remix","WalletConnectRemixClient","App","useState","ethereumClient","setEthereumClient","wagmiConfig","setWagmiConfig","theme","setTheme","useEffect","initClient","internalEvents","on","WalletConnectUI","display","PROJECT_ID","ReactDOM","render","document","getElementById","createClient","EventManager","methods","onload","subscribeToEvents","call","then","emit","quality","toLowerCase","console","log","chains","arbitrum","arbitrumGoerli","mainnet","polygon","polygonMumbai","optimism","optimismGoerli","goerli","sepolia","configureChains","w3mProvider","projectId","publicClient","createConfig","autoConnect","connectors","w3mConnectors","EthereumClient","error","subscribe","event","status","data","account","currentChain","chain","id","Promise","resolve","reject","request","message","method","disconnect","PluginClient","WALLET_CONNECT_PROJECT_ID"],"sourceRoot":""}